纯靠个人理解版本的堆数据结构特性：
堆属于一个完全二叉树（即 不算最后一层的话属于一个满二叉树，且最后一层的所有节点都在最左边）
而通过完全二叉树的特性可以得到，是没有多余的结点的
故完全二叉树是可以通过数组来进行存储的
    第一个节点存储在下标为1的地方  则可以得到，下标为N的结点的子节点位于 下标为2*N 和2*N+1的地方（如果存在的话）

堆的创建 - 因为完全二叉树的特性，所以所有相关的数据都采用数组来存储
堆的创建，可以视作为从一个大小为1的仅有一个结点的完全二叉树逐步扩容
    如果有新的结点加入，那就添加到完全二叉树的最后一位中去，然后再根据堆的特性去调整（大根堆或小根堆的特性）

应用到数组的数据结构中来存储之后，效果会更为的简单（即可以便捷的通过数组下标来计算父子节点之间的关系而不是通过指针指来指去的）



堆排序实现效果：
    首先从第一个数据到最后一个数据 依次建堆
    然后依次remove堆顶元素，最后返回的数组就是有序集合
    为什么呢？ 思考一下移除堆顶元素的过程，是首先把堆顶元素和堆最后一个元素交换，然后再堆化，循环往复
    如果一直都是大根堆的话，我们每次做的操作就是，把最大的一个元素移动到数组最后面